version: "3.8"
services:
  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - ${REDIS_DATA_PATH}:/data
  postgres:
    image: postgres:15.1
    restart: unless-stopped
    # Enables postgres all logs
    #command:
    #  ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_SCHEMA: ${DATABASE_SCHEMA}
      DATABASE_INIT_SCRIPT: /init/${DATABASE_INIT_SCRIPT}
      #  - POSTGRES_PASSWORD_FILE=/run/secrets/db_password <-- alternative for POSTGRES_PASSWORD (to use with docker secrets)
    volumes:
      - ${PG_DATA_PATH}:/var/lib/postgresql/data/
      - ./static/pg/:/docker-entrypoint-initdb.d/
      - ${DATABASE_INIT_PATH}:/init
  pgbackups:
    image: prodrigestivill/postgres-backup-local:15
    restart: unless-stopped
    user: postgres:postgres
    volumes:
      - ${PG_BACKUP_PATH}:/backups
    ports:
      - "127.0.0.1:9123:9123/tcp"
    links:
      - postgres
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      #  - POSTGRES_PASSWORD_FILE=/run/secrets/db_password <-- alternative for POSTGRES_PASSWORD (to use with docker secrets)
      POSTGRES_EXTRA_OPTS: "-Z6 --schema=development --blobs"
      SCHEDULE: "@daily"
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
      HEALTHCHECK_PORT: 9123
      

